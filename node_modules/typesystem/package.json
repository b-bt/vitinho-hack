{
  "_args": [
    [
      {
        "raw": "typesystem@~5.0.0",
        "scope": null,
        "escapedName": "typesystem",
        "name": "typesystem",
        "rawSpec": "~5.0.0",
        "spec": ">=5.0.0 <5.1.0",
        "type": "range"
      },
      "/Users/tbbruno/Desktop/vitinho-hack/node_modules/r-pi-usonic"
    ]
  ],
  "_from": "typesystem@>=5.0.0 <5.1.0",
  "_id": "typesystem@5.0.0",
  "_inCache": true,
  "_location": "/typesystem",
  "_nodeVersion": "1.0.3",
  "_npmUser": {
    "name": "clebert",
    "email": "clebert@me.com"
  },
  "_npmVersion": "2.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "typesystem@~5.0.0",
    "scope": null,
    "escapedName": "typesystem",
    "name": "typesystem",
    "rawSpec": "~5.0.0",
    "spec": ">=5.0.0 <5.1.0",
    "type": "range"
  },
  "_requiredBy": [
    "/r-pi-gpio",
    "/r-pi-usonic"
  ],
  "_resolved": "https://registry.npmjs.org/typesystem/-/typesystem-5.0.0.tgz",
  "_shasum": "b8c74eee328a905fb155df8c90523a54461b5bd7",
  "_shrinkwrap": null,
  "_spec": "typesystem@~5.0.0",
  "_where": "/Users/tbbruno/Desktop/vitinho-hack/node_modules/r-pi-usonic",
  "author": {
    "name": "Clemens Akens",
    "email": "clebert@me.com",
    "url": "http://clebert.com/"
  },
  "bugs": {
    "url": "https://github.com/clebert/typesystem/issues"
  },
  "config": {
    "mocha-cov-reporter": {
      "failOnError": true,
      "threshold": 100,
      "useColors": true
    }
  },
  "dependencies": {},
  "deprecated": "THIS PROJECT IS NO LONGER MAINTAINED by clebert",
  "description": "Better type checking for JavaScript.",
  "devDependencies": {
    "blanket": "latest",
    "expressive-assertion": "latest",
    "grunt": "latest",
    "grunt-bumpup": "latest",
    "grunt-cli": "latest",
    "grunt-contrib-jshint": "latest",
    "grunt-coveralls": "latest",
    "grunt-jscs": "latest",
    "grunt-karma": "latest",
    "grunt-mocha-test": "latest",
    "grunt-module": "latest",
    "karma": "latest",
    "karma-browserify": "latest",
    "karma-mocha": "latest",
    "karma-sauce-launcher": "latest",
    "karma-spec-reporter": "latest",
    "load-grunt-tasks": "latest",
    "mocha-cov-reporter": "latest",
    "mocha-lcov-reporter": "latest",
    "time-grunt": "latest"
  },
  "directories": {},
  "dist": {
    "shasum": "b8c74eee328a905fb155df8c90523a54461b5bd7",
    "tarball": "https://registry.npmjs.org/typesystem/-/typesystem-5.0.0.tgz"
  },
  "engines": {
    "node": ">= 0.10.0"
  },
  "gitHead": "a4969f4e52b920dab1dc943ec90337a23fc0580e",
  "homepage": "https://github.com/clebert/typesystem#readme",
  "inceptionYear": 2014,
  "keywords": [
    "type",
    "checking",
    "typeof",
    "predicate"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "https://raw.githubusercontent.com/clebert/typesystem/master/LICENSE"
    }
  ],
  "main": "lib/ts.js",
  "maintainers": [
    {
      "name": "clebert",
      "email": "clebert@me.com"
    }
  ],
  "name": "typesystem",
  "optionalDependencies": {},
  "readme": "# typesystem\n\n> Better type checking for JavaScript.\n\n[![license](http://img.shields.io/badge/license-MIT-blue.svg?style=flat)](https://raw.githubusercontent.com/clebert/typesystem/master/LICENSE)\n[![npm](http://img.shields.io/npm/v/typesystem.svg?style=flat)](https://www.npmjs.org/package/typesystem)\n[![downloads](http://img.shields.io/npm/dm/typesystem.svg?style=flat)](https://www.npmjs.org/package/typesystem)\n\n[![build](http://img.shields.io/travis/clebert/typesystem/master.svg?style=flat)](https://travis-ci.org/clebert/typesystem)\n[![coverage](http://img.shields.io/coveralls/clebert/typesystem/master.svg?style=flat)](https://coveralls.io/r/clebert/typesystem)\n[![code climate](http://img.shields.io/codeclimate/github/clebert/typesystem.svg?style=flat)](https://codeclimate.com/github/clebert/typesystem)\n[![dependencies](http://img.shields.io/david/clebert/typesystem.svg?style=flat)](https://david-dm.org/clebert/typesystem#info=dependencies&view=table)\n[![devDependencies](http://img.shields.io/david/dev/clebert/typesystem.svg?style=flat)](https://david-dm.org/clebert/typesystem#info=devDependencies&view=table)\n\n[![Sauce Test Status](https://saucelabs.com/browser-matrix/clebert.svg)](https://saucelabs.com/u/clebert)\n\n## Getting Started\n\n### Installation\n\n```sh\nnpm install typesystem --save\n```\n\n### Integration\n\n```javascript\nvar ts = require('typesystem');\n```\n\n## API\n\n### Overview\n\n- [ts.isArguments(value)](#tsisargumentsvalue)\n- [ts.isArray(value)](#tsisarrayvalue)\n- [ts.isBoolean(value)](#tsisbooleanvalue)\n- [ts.isBooleanObject(value)](#tsisbooleanobjectvalue)\n- [ts.isDate(value)](#tsisdatevalue)\n- [ts.isDocument(value)](#tsisdocumentvalue)\n- [ts.isElement(value)](#tsiselementvalue)\n- [ts.isError(value)](#tsiserrorvalue)\n- [ts.isFloat(value)](#tsisfloatvalue)\n- [ts.isFunction(value)](#tsisfunctionvalue)\n- [ts.isGlobal(value)](#tsisglobalvalue)\n- [ts.isInteger(value)](#tsisintegervalue)\n- [ts.isNaN(value)](#tsisnanvalue)\n- [ts.isNull(value)](#tsisnullvalue)\n- [ts.isNullOrUndefined(value)](#tsisnullorundefinedvalue)\n- [ts.isNumber(value)](#tsisnumbervalue)\n- [ts.isNumberObject(value)](#tsisnumberobjectvalue)\n- [ts.isObject(value)](#tsisobjectvalue)\n- [ts.isPrimitive(value)](#tsisprimitivevalue)\n- [ts.isReference(value)](#tsisreferencevalue)\n- [ts.isRegExp(value)](#tsisregexpvalue)\n- [ts.isString(value)](#tsisstringvalue)\n- [ts.isStringObject(value)](#tsisstringobjectvalue)\n- [ts.isSymbol(value)](#tsissymbolvalue)\n- [ts.isUndefined(value)](#tsisundefinedvalue)\n\n### ts.isArguments(value)\n\n```javascript\nts.isArguments(arguments); // returns true\n```\n\n### ts.isArray(value)\n\n```javascript\nts.isArray([]);          // returns true\nts.isArray(new Array()); // returns true\n```\n\n### ts.isBoolean(value)\n\n```javascript\nts.isBoolean(true);  // returns true\nts.isBoolean(false); // returns true\n```\n\n### ts.isBooleanObject(value)\n\n```javascript\nts.isBooleanObject(new Boolean()); // returns true\n```\n\n### ts.isDate(value)\n\n```javascript\nts.isDate(new Date()); // returns true\n```\n\n### ts.isDocument(value)\n\n```javascript\nts.isDocument(document); // returns true\n```\n\n### ts.isElement(value)\n\n```javascript\nts.isElement(document.createElement('div'));  // returns true\nts.isElement(document.createElement('span')); // returns true\n```\n\n### ts.isError(value)\n\n```javascript\nts.isError(new Error());          // returns true\nts.isError(new EvalError());      // returns true\nts.isError(new RangeError());     // returns true\nts.isError(new ReferenceError()); // returns true\nts.isError(new SyntaxError());    // returns true\nts.isError(new TypeError());      // returns true\nts.isError(new URIError());       // returns true\n```\n\n### ts.isFloat(value)\n\n```javascript\nts.isFloat(1);                 // returns true\nts.isFloat(-1);                // returns true\nts.isFloat(0);                 // returns true\nts.isFloat(-0);                // returns true\nts.isFloat(Number.MAX_VALUE);  // returns true\nts.isFloat(-Number.MAX_VALUE); // returns true\nts.isFloat(Number.MIN_VALUE);  // returns true\nts.isFloat(-Number.MIN_VALUE); // returns true\n```\n\n### ts.isFunction(value)\n\n```javascript\nts.isFunction(function () {}); // returns true\nts.isFunction(new Function()); // returns true\n```\n\n### ts.isGlobal(value)\n\n```javascript\nts.isGlobal(global); // returns true\nts.isGlobal(window); // returns true\n```\n\n### ts.isInteger(value)\n\n```javascript\nts.isInteger(1);                 // returns true\nts.isInteger(-1);                // returns true\nts.isInteger(0);                 // returns true\nts.isInteger(-0);                // returns true\nts.isInteger(Number.MAX_VALUE);  // returns true\nts.isInteger(-Number.MAX_VALUE); // returns true\n```\n\n### ts.isNaN(value)\n\n```javascript\nts.isNaN(NaN); // returns true\n```\n\n### ts.isNull(value)\n\n```javascript\nts.isNull(null); // returns true\n```\n\n### ts.isNullOrUndefined(value)\n\n```javascript\nts.isNullOrUndefined(null);      // returns true\nts.isNullOrUndefined(undefined); // returns true\nts.isNullOrUndefined(void 0);    // returns true\n```\n\n### ts.isNumber(value)\n\n```javascript\nts.isNumber(1);                 // returns true\nts.isNumber(-1);                // returns true\nts.isNumber(0);                 // returns true\nts.isNumber(-0);                // returns true\nts.isNumber(Number.MAX_VALUE);  // returns true\nts.isNumber(-Number.MAX_VALUE); // returns true\nts.isNumber(Number.MIN_VALUE);  // returns true\nts.isNumber(-Number.MIN_VALUE); // returns true\nts.isNumber(Infinity);          // returns true\nts.isNumber(-Infinity);         // returns true\nts.isNumber(NaN);               // returns true\n```\n\n### ts.isNumberObject(value)\n\n```javascript\nts.isNumberObject(new Number()); // returns true\n```\n\n### ts.isObject(value)\n\n```javascript\nts.isObject({});           // returns true\nts.isObject(new Object()); // returns true\n```\n\n### ts.isPrimitive(value)\n\n```javascript\nts.isPrimitive(true);      // returns true\nts.isPrimitive(null);      // returns true\nts.isPrimitive(1);         // returns true\nts.isPrimitive('foo');     // returns true\nts.isPrimitive(Symbol());  // returns true\nts.isPrimitive(undefined); // returns true\n```\n\n### ts.isReference(value)\n\n```javascript\nts.isReference(arguments);                     // returns true\nts.isReference([]);                            // returns true\nts.isReference(new Boolean());                 // returns true\nts.isReference(new Date());                    // returns true\nts.isReference(document);                      // returns true\nts.isReference(document.createElement('div')); // returns true\nts.isReference(new Error());                   // returns true\nts.isReference(function () {});                // returns true\nts.isReference(global);                        // returns true\nts.isReference(new Number());                  // returns true\nts.isReference({});                            // returns true\nts.isReference(/(?:)/);                        // returns true\nts.isReference(new String());                  // returns true\n```\n\n### ts.isRegExp(value)\n\n```javascript\nts.isRegExp(/(?:)/);       // returns true\nts.isRegExp(new RegExp()); // returns true\n```\n\n### ts.isString(value)\n\n```javascript\nts.isString('foo'); // returns true\nts.isString('');    // returns true\n```\n\n### ts.isStringObject(value)\n\n```javascript\nts.isStringObject(new String()); // returns true\n```\n\n### ts.isSymbol(value)\n\n```javascript\nts.isSymbol(Symbol()); // returns true\n```\n\n### ts.isUndefined(value)\n\n```javascript\nts.isUndefined(undefined); // returns true\nts.isUndefined(void 0);    // returns true\n```\n\n## Running Tests\n\nTo run the test suite first install the development dependencies:\n\n```sh\nnpm install\n```\n\nthen run the tests:\n\n```sh\nnpm test\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/clebert/typesystem.git"
  },
  "scripts": {
    "test": "grunt"
  },
  "version": "5.0.0"
}
